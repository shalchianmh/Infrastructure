version: '3.8'

services:
  front:
    build: ./web-project-front
    command: npm start
    volumes:
      - ./web-project-front/:/usr/src/web-project-front/
    ports:
      - 3000:3000
    env_file:
      - ./web-project-front/.env
    restart: always
  web:
    build: ./web_backend/
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./web_backend/:/usr/src/web_backend/
    ports:
      - 8000:8000
    env_file:
      - ./web_backend/.env.dev

    depends_on:
      db:
        condition: service_healthy
    restart: always


  db:
    image: postgres:16
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=web_backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - web
      - front

volumes:
  postgres_data:
  web_backend: